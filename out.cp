typedef char __int8_t ; typedef unsigned char __uint8_t ; typedef short __int16_t ; typedef unsigned short __uint16_t ; typedef int __int32_t ; typedef unsigned int __uint32_t ; typedef long long __int64_t ; typedef unsigned long long __uint64_t ; typedef long __darwin_intptr_t ; typedef unsigned int __darwin_natural_t ; typedef int __darwin_ct_rune_t ; typedef union { char __mbstate8 [ 128 ] ; long long _mbstateL ; } __mbstate_t ; typedef __mbstate_t __darwin_mbstate_t ; typedef long int __darwin_ptrdiff_t ; typedef long unsigned int __darwin_size_t ; typedef void * __darwin_va_list ; typedef int __darwin_wchar_t ; typedef __darwin_wchar_t __darwin_rune_t ; typedef int __darwin_wint_t ; typedef unsigned long __darwin_clock_t ; typedef __uint32_t __darwin_socklen_t ; typedef long __darwin_ssize_t ; typedef long __darwin_time_t ; typedef signed char int8_t ; typedef short int16_t ; typedef int int32_t ; typedef long long int64_t ; typedef unsigned char u_int8_t ; typedef unsigned short u_int16_t ; typedef unsigned int u_int32_t ; typedef unsigned long long u_int64_t ; typedef int64_t register_t ; typedef __darwin_intptr_t intptr_t ; typedef unsigned long uintptr_t ; typedef u_int64_t user_addr_t ; typedef u_int64_t user_size_t ; typedef int64_t user_ssize_t ; typedef int64_t user_long_t ; typedef u_int64_t user_ulong_t ; typedef int64_t user_time_t ; typedef int64_t user_off_t ; typedef u_int64_t syscall_arg_t ; typedef __int64_t __darwin_blkcnt_t ; typedef __int32_t __darwin_blksize_t ; typedef __int32_t __darwin_dev_t ; typedef unsigned int __darwin_fsblkcnt_t ; typedef unsigned int __darwin_fsfilcnt_t ; typedef __uint32_t __darwin_gid_t ; typedef __uint32_t __darwin_id_t ; typedef __uint64_t __darwin_ino64_t ; typedef __darwin_ino64_t __darwin_ino_t ; typedef __darwin_natural_t __darwin_mach_port_name_t ; typedef __darwin_mach_port_name_t __darwin_mach_port_t ; typedef __uint16_t __darwin_mode_t ; typedef __int64_t __darwin_off_t ; typedef __int32_t __darwin_pid_t ; typedef __uint32_t __darwin_sigset_t ; typedef __int32_t __darwin_suseconds_t ; typedef __uint32_t __darwin_uid_t ; typedef __uint32_t __darwin_useconds_t ; typedef unsigned char __darwin_uuid_t [ 16 ] ; typedef char __darwin_uuid_string_t [ 37 ] ; struct __darwin_pthread_handler_rec { void ( * __routine ) ( void * ) ; void * __arg ; struct __darwin_pthread_handler_rec * __next ; } ; struct _opaque_pthread_attr_t { long __sig ; char __opaque [ 56 ] ; } ; struct _opaque_pthread_cond_t { long __sig ; char __opaque [ 40 ] ; } ; struct _opaque_pthread_condattr_t { long __sig ; char __opaque [ 8 ] ; } ; struct _opaque_pthread_mutex_t { long __sig ; char __opaque [ 56 ] ; } ; struct _opaque_pthread_mutexattr_t { long __sig ; char __opaque [ 8 ] ; } ; struct _opaque_pthread_once_t { long __sig ; char __opaque [ 8 ] ; } ; struct _opaque_pthread_rwlock_t { long __sig ; char __opaque [ 192 ] ; } ; struct _opaque_pthread_rwlockattr_t { long __sig ; char __opaque [ 16 ] ; } ; struct _opaque_pthread_t { long __sig ; struct __darwin_pthread_handler_rec * __cleanup_stack ; char __opaque [ 8176 ] ; } ; typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t ; typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t ; typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t ; typedef unsigned long __darwin_pthread_key_t ; typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t ; typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t ; typedef struct _opaque_pthread_once_t __darwin_pthread_once_t ; typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t ; typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t ; typedef struct _opaque_pthread_t * __darwin_pthread_t ; typedef unsigned char u_char ; typedef unsigned short u_short ; typedef unsigned int u_int ; typedef unsigned long u_long ; typedef unsigned short ushort ; typedef unsigned int uint ; typedef u_int64_t u_quad_t ; typedef int64_t quad_t ; typedef quad_t * qaddr_t ; typedef char * caddr_t ; typedef int32_t daddr_t ; typedef __darwin_dev_t dev_t ; typedef u_int32_t fixpt_t ; typedef __darwin_blkcnt_t blkcnt_t ; typedef __darwin_blksize_t blksize_t ; typedef __darwin_gid_t gid_t ; typedef __uint32_t in_addr_t ; typedef __uint16_t in_port_t ; typedef __darwin_ino_t ino_t ; typedef __darwin_ino64_t ino64_t ; typedef __int32_t key_t ; typedef __darwin_mode_t mode_t ; typedef __uint16_t nlink_t ; typedef __darwin_id_t id_t ; typedef __darwin_pid_t pid_t ; typedef __darwin_off_t off_t ; typedef int32_t segsz_t ; typedef int32_t swblk_t ; typedef __darwin_uid_t uid_t ; typedef __darwin_clock_t clock_t ; typedef __darwin_size_t size_t ; typedef __darwin_ssize_t ssize_t ; typedef __darwin_time_t time_t ; typedef __darwin_useconds_t useconds_t ; typedef __darwin_suseconds_t suseconds_t ; typedef __darwin_size_t rsize_t ; typedef int errno_t ; typedef struct fd_set { __int32_t fds_bits [ ( ( ( ( 1024 ) % ( ( sizeof ( __int32_t ) * 8 ) ) ) == 0 ) ? ( ( 1024 ) / ( ( sizeof ( __int32_t ) * 8 ) ) ) : ( ( ( 1024 ) / ( ( sizeof ( __int32_t ) * 8 ) ) ) + 1 ) ) ] ; } fd_set ; int __darwin_check_fd_set_overflow ( int , const void * , int ) ; static int __darwin_check_fd_set ( int _a , const void * _b ) { if ( ( uintptr_t ) & __darwin_check_fd_set_overflow != ( uintptr_t ) 0 ) { return __darwin_check_fd_set_overflow ( _a , _b , 0 ) ; } else { return 1 ; } } static int __darwin_fd_isset ( int _fd , const struct fd_set * _p ) { if ( __darwin_check_fd_set ( _fd , ( const void * ) _p ) ) { return _p -> fds_bits [ ( unsigned long ) _fd / ( sizeof ( __int32_t ) * 8 ) ] & ( ( __int32_t ) ( ( ( unsigned long ) 1 ) << ( ( unsigned long ) _fd % ( sizeof ( __int32_t ) * 8 ) ) ) ) ; } return 0 ; } static void __darwin_fd_set ( int _fd , struct fd_set * const _p ) { if ( __darwin_check_fd_set ( _fd , ( const void * ) _p ) ) { ( _p -> fds_bits [ ( unsigned long ) _fd / ( sizeof ( __int32_t ) * 8 ) ] |= ( ( __int32_t ) ( ( ( unsigned long ) 1 ) << ( ( unsigned long ) _fd % ( sizeof ( __int32_t ) * 8 ) ) ) ) ) ; } } static void __darwin_fd_clr ( int _fd , struct fd_set * const _p ) { if ( __darwin_check_fd_set ( _fd , ( const void * ) _p ) ) { ( _p -> fds_bits [ ( unsigned long ) _fd / ( sizeof ( __int32_t ) * 8 ) ] &= ~ ( ( __int32_t ) ( ( ( unsigned long ) 1 ) << ( ( unsigned long ) _fd % ( sizeof ( __int32_t ) * 8 ) ) ) ) ) ; } } typedef __int32_t fd_mask ; typedef __darwin_pthread_attr_t pthread_attr_t ; typedef __darwin_pthread_cond_t pthread_cond_t ; typedef __darwin_pthread_condattr_t pthread_condattr_t ; typedef __darwin_pthread_mutex_t pthread_mutex_t ; typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t ; typedef __darwin_pthread_once_t pthread_once_t ; typedef __darwin_pthread_rwlock_t pthread_rwlock_t ; typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t ; typedef __darwin_pthread_t pthread_t ; typedef __darwin_pthread_key_t pthread_key_t ; typedef __darwin_fsblkcnt_t fsblkcnt_t ; typedef __darwin_fsfilcnt_t fsfilcnt_t ; typedef int __darwin_nl_item ; typedef int __darwin_wctrans_t ; typedef __uint32_t __darwin_wctype_t ; typedef __darwin_mbstate_t mbstate_t ; typedef __darwin_ct_rune_t ct_rune_t ; typedef __darwin_rune_t rune_t ; typedef __darwin_wchar_t wchar_t ; typedef __builtin_va_list __gnuc_va_list ; typedef __builtin_va_list va_list ; typedef __darwin_va_list va_list ; int renameat ( int , const char * , int , const char * ) ; int renamex_np ( const char * , const char * , unsigned int ) ; int renameatx_np ( int , const char * , int , const char * , unsigned int ) ; typedef __darwin_off_t fpos_t ; struct __sbuf { unsigned char * _base ; int _size ; } ; struct __sFILEX ; typedef struct __sFILE { unsigned char * _p ; int _r ; int _w ; short _flags ; short _file ; struct __sbuf _bf ; int _lbfsize ; void * _cookie ; int ( * _close ) ( void * ) ; int ( * _read ) ( void * , char * , int ) ; fpos_t ( * _seek ) ( void * , fpos_t , int ) ; int ( * _write ) ( void * , const char * , int ) ; struct __sbuf _ub ; struct __sFILEX * _extra ; int _ur ; unsigned char _ubuf [ 3 ] ; unsigned char _nbuf [ 1 ] ; struct __sbuf _lb ; int _blksize ; fpos_t _offset ; } FILE ; extern FILE * __stdinp ; extern FILE * __stdoutp ; extern FILE * __stderrp ; void clearerr ( FILE * ) ; int fclose ( FILE * ) ; int feof ( FILE * ) ; int ferror ( FILE * ) ; int fflush ( FILE * ) ; int fgetc ( FILE * ) ; int fgetpos ( FILE * , fpos_t * ) ; char * fgets ( char * , int , FILE * ) ; FILE * fopen ( const char * __filename , const char * __mode ) __asm ( "_" "fopen" ) ; int fprintf ( FILE * , const char * , ... ) __attribute__ ( ( __format__ ( __printf__ , 2 , 3 ) ) ) ; int fputc ( int , FILE * ) ; int fputs ( const char * , FILE * ) __asm ( "_" "fputs" ) ; size_t fread ( void * __ptr , size_t __size , size_t __nitems , FILE * __stream ) ; FILE * freopen ( const char * , const char * , FILE * ) __asm ( "_" "freopen" ) ; int fscanf ( FILE * , const char * , ... ) __attribute__ ( ( __format__ ( __scanf__ , 2 , 3 ) ) ) ; int fseek ( FILE * , long , int ) ; int fsetpos ( FILE * , const fpos_t * ) ; long ftell ( FILE * ) ; size_t fwrite ( const void * __ptr , size_t __size , size_t __nitems , FILE * __stream ) __asm ( "_" "fwrite" ) ; int getc ( FILE * ) ; int getchar ( void ) ; __attribute__ ( ( __deprecated__ ) ) char * gets ( char * ) ; void perror ( const char * ) ; int printf ( const char * , ... ) __attribute__ ( ( __format__ ( __printf__ , 1 , 2 ) ) ) ; int putc ( int , FILE * ) ; int putchar ( int ) ; int puts ( const char * ) ; int remove ( const char * ) ; int rename ( const char * __old , const char * __new ) ; void rewind ( FILE * ) ; int scanf ( const char * , ... ) __attribute__ ( ( __format__ ( __scanf__ , 1 , 2 ) ) ) ; void setbuf ( FILE * , char * ) ; int setvbuf ( FILE * , char * , int , size_t ) ; __attribute__ ( ( __deprecated__ ) ) int sprintf ( char * , const char * , ... ) __attribute__ ( ( __format__ ( __printf__ , 2 , 3 ) ) ) ; int sscanf ( const char * , const char * , ... ) __attribute__ ( ( __format__ ( __scanf__ , 2 , 3 ) ) ) ; FILE * tmpfile ( void ) ; __attribute__ ( ( __deprecated__ ) ) char * tmpnam ( char * ) ; int ungetc ( int , FILE * ) ; int vfprintf ( FILE * , const char * , va_list ) __attribute__ ( ( __format__ ( __printf__ , 2 , 0 ) ) ) ; int vprintf ( const char * , va_list ) __attribute__ ( ( __format__ ( __printf__ , 1 , 0 ) ) ) ; __attribute__ ( ( __deprecated__ ) ) int vsprintf ( char * , const char * , va_list ) __attribute__ ( ( __format__ ( __printf__ , 2 , 0 ) ) ) ; char * ctermid ( char * ) ; FILE * fdopen ( int , const char * ) __asm ( "_" "fdopen" ) ; int fileno ( FILE * ) ; int pclose ( FILE * ) ; FILE * popen ( const char * , const char * ) __asm ( "_" "popen" ) ; int __srget ( FILE * ) ; int __svfscanf ( FILE * , const char * , va_list ) __attribute__ ( ( __format__ ( __scanf__ , 2 , 0 ) ) ) ; int __swbuf ( int , FILE * ) ; void flockfile ( FILE * ) ; int ftrylockfile ( FILE * ) ; void funlockfile ( FILE * ) ; int getc_unlocked ( FILE * ) ; int getchar_unlocked ( void ) ; int putc_unlocked ( int , FILE * ) ; int putchar_unlocked ( int ) ; int getw ( FILE * ) ; int putw ( int , FILE * ) ; __attribute__ ( ( __deprecated__ ) ) char * tempnam ( const char * __dir , const char * __prefix ) __asm ( "_" "tempnam" ) ; int fseeko ( FILE * __stream , off_t __offset , int __whence ) ; off_t ftello ( FILE * __stream ) ; int snprintf ( char * __str , size_t __size , const char * __format , ... ) __attribute__ ( ( __format__ ( __printf__ , 3 , 4 ) ) ) ; int vfscanf ( FILE * __stream , const char * __format , va_list ) __attribute__ ( ( __format__ ( __scanf__ , 2 , 0 ) ) ) ; int vscanf ( const char * __format , va_list ) __attribute__ ( ( __format__ ( __scanf__ , 1 , 0 ) ) ) ; int vsnprintf ( char * __str , size_t __size , const char * __format , va_list ) __attribute__ ( ( __format__ ( __printf__ , 3 , 0 ) ) ) ; int vsscanf ( const char * __str , const char * __format , va_list ) __attribute__ ( ( __format__ ( __scanf__ , 2 , 0 ) ) ) ; int dprintf ( int , const char * , ... ) __attribute__ ( ( __format__ ( __printf__ , 2 , 3 ) ) ) ; int vdprintf ( int , const char * , va_list ) __attribute__ ( ( __format__ ( __printf__ , 2 , 0 ) ) ) ; ssize_t getdelim ( char * * __linep , size_t * __linecapp , int __delimiter , FILE * __stream ) ; ssize_t getline ( char * * __linep , size_t * __linecapp , FILE * __stream ) ; FILE * fmemopen ( void * __buf , size_t __size , const char * __mode ) ; FILE * open_memstream ( char * * __bufp , size_t * __sizep ) ; extern const int sys_nerr ; extern const char * const sys_errlist [ ] ; int asprintf ( char * * , const char * , ... ) __attribute__ ( ( __format__ ( __printf__ , 2 , 3 ) ) ) ; char * ctermid_r ( char * ) ; char * fgetln ( FILE * , size_t * ) ; const char * fmtcheck ( const char * , const char * ) __attribute__ ( ( format_arg ( 2 ) ) ) ; int fpurge ( FILE * ) ; void setbuffer ( FILE * , char * , int ) ; int setlinebuf ( FILE * ) ; int vasprintf ( char * * , const char * , va_list ) __attribute__ ( ( __format__ ( __printf__ , 2 , 0 ) ) ) ; FILE * funopen ( const void * , int ( * ) ( void * , char * , int ) , int ( * ) ( void * , const char * , int ) , fpos_t ( * ) ( void * , fpos_t , int ) , int ( * ) ( void * ) ) ; struct timespec { __darwin_time_t tv_sec ; long tv_nsec ; } ; struct tm { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; int tm_year ; int tm_wday ; int tm_yday ; int tm_isdst ; long tm_gmtoff ; char * tm_zone ; } ; extern char * tzname [ ] ; extern int getdate_err ; extern long timezone __asm ( "_" "timezone" ) ; extern int daylight ; char * asctime ( const struct tm * ) ; clock_t clock ( void ) __asm ( "_" "clock" ) ; char * ctime ( const time_t * ) ; double difftime ( time_t , time_t ) ; struct tm * getdate ( const char * ) ; struct tm * gmtime ( const time_t * ) ; struct tm * localtime ( const time_t * ) ; time_t mktime ( struct tm * ) __asm ( "_" "mktime" ) ; size_t strftime ( char * , size_t , const char * , const struct tm * ) __asm ( "_" "strftime" ) ; char * strptime ( const char * , const char * , struct tm * ) __asm ( "_" "strptime" ) ; time_t time ( time_t * ) ; void tzset ( void ) ; char * asctime_r ( const struct tm * , char * ) ; char * ctime_r ( const time_t * , char * ) ; struct tm * gmtime_r ( const time_t * , struct tm * ) ; struct tm * localtime_r ( const time_t * , struct tm * ) ; time_t posix2time ( time_t ) ; void tzsetwall ( void ) ; time_t time2posix ( time_t ) ; time_t timelocal ( struct tm * const ) ; time_t timegm ( struct tm * const ) ; int nanosleep ( const struct timespec * __rqtp , struct timespec * __rmtp ) __asm ( "_" "nanosleep" __DARWIN_SUF_NON_CANCELABLE ) ; typedef enum { _CLOCK_REALTIME = 0 , _CLOCK_MONOTONIC = 6 , _CLOCK_MONOTONIC_RAW = 4 , _CLOCK_MONOTONIC_RAW_APPROX = 5 , _CLOCK_UPTIME_RAW = 8 , _CLOCK_UPTIME_RAW_APPROX = 9 , _CLOCK_PROCESS_CPUTIME_ID = 12 , _CLOCK_THREAD_CPUTIME_ID = 16 } clockid_t ; int clock_getres ( clockid_t __clock_id , struct timespec * __res ) ; int clock_gettime ( clockid_t __clock_id , struct timespec * __tp ) ; __uint64_t clock_gettime_nsec_np ( clockid_t __clock_id ) ; int clock_settime ( clockid_t __clock_id , const struct timespec * __tp ) ; int timespec_get ( struct timespec * ts , int base ) ; typedef __darwin_wint_t wint_t ; typedef __darwin_wctype_t wctype_t ; typedef struct { __darwin_rune_t __min ; __darwin_rune_t __max ; __darwin_rune_t __map ; __uint32_t * __types ; } _RuneEntry ; typedef struct { int __nranges ; _RuneEntry * __ranges ; } _RuneRange ; typedef struct { char __name [ 14 ] ; __uint32_t __mask ; } _RuneCharClass ; typedef struct { char __magic [ 8 ] ; char __encoding [ 32 ] ; __darwin_rune_t ( * __sgetrune ) ( const char * , __darwin_size_t , char const * * ) ; int ( * __sputrune ) ( __darwin_rune_t , char * , __darwin_size_t , char * * ) ; __darwin_rune_t __invalid_rune ; __uint32_t __runetype [ ( 1 << 8 ) ] ; __darwin_rune_t __maplower [ ( 1 << 8 ) ] ; __darwin_rune_t __mapupper [ ( 1 << 8 ) ] ; _RuneRange __runetype_ext ; _RuneRange __maplower_ext ; _RuneRange __mapupper_ext ; void * __variable ; int __variable_len ; int __ncharclasses ; _RuneCharClass * __charclasses ; } _RuneLocale ; extern _RuneLocale _DefaultRuneLocale ; extern _RuneLocale * _CurrentRuneLocale ; int isalnum ( int ) ; int isalpha ( int ) ; int isblank ( int ) ; int iscntrl ( int ) ; int isdigit ( int ) ; int isgraph ( int ) ; int islower ( int ) ; int isprint ( int ) ; int ispunct ( int ) ; int isspace ( int ) ; int isupper ( int ) ; int isxdigit ( int ) ; int tolower ( int ) ; int toupper ( int ) ; int isascii ( int ) ; int toascii ( int ) ; int _tolower ( int ) ; int _toupper ( int ) ; int digittoint ( int ) ; int ishexnumber ( int ) ; int isideogram ( int ) ; int isnumber ( int ) ; int isphonogram ( int ) ; int isrune ( int ) ; int isspecial ( int ) ; int iswalnum ( wint_t ) ; int iswalpha ( wint_t ) ; int iswcntrl ( wint_t ) ; int iswctype ( wint_t , wctype_t ) ; int iswdigit ( wint_t ) ; int iswgraph ( wint_t ) ; int iswlower ( wint_t ) ; int iswprint ( wint_t ) ; int iswpunct ( wint_t ) ; int iswspace ( wint_t ) ; int iswupper ( wint_t ) ; int iswxdigit ( wint_t ) ; wint_t towlower ( wint_t ) ; wint_t towupper ( wint_t ) ; wctype_t wctype ( const char * ) ; wint_t btowc ( int ) ; wint_t fgetwc ( FILE * ) ; wchar_t * fgetws ( wchar_t * , int , FILE * ) ; wint_t fputwc ( wchar_t , FILE * ) ; int fputws ( const wchar_t * , FILE * ) ; int fwide ( FILE * , int ) ; int fwprintf ( FILE * , const wchar_t * , ... ) ; int fwscanf ( FILE * , const wchar_t * , ... ) ; wint_t getwc ( FILE * ) ; wint_t getwchar ( void ) ; size_t mbrlen ( const char * , size_t , mbstate_t * ) ; size_t mbrtowc ( wchar_t * , const char * , size_t , mbstate_t * ) ; int mbsinit ( const mbstate_t * ) ; size_t mbsrtowcs ( wchar_t * , const char * * , size_t , mbstate_t * ) ; wint_t putwc ( wchar_t , FILE * ) ; wint_t putwchar ( wchar_t ) ; int swprintf ( wchar_t * , size_t , const wchar_t * , ... ) ; int swscanf ( const wchar_t * , const wchar_t * , ... ) ; wint_t ungetwc ( wint_t , FILE * ) ; int vfwprintf ( FILE * , const wchar_t * , __darwin_va_list ) ; int vswprintf ( wchar_t * , size_t , const wchar_t * , __darwin_va_list ) ; int vwprintf ( const wchar_t * , __darwin_va_list ) ; size_t wcrtomb ( char * , wchar_t , mbstate_t * ) ; wchar_t * wcscat ( wchar_t * , const wchar_t * ) ; wchar_t * wcschr ( const wchar_t * , wchar_t ) ; int wcscmp ( const wchar_t * , const wchar_t * ) ; int wcscoll ( const wchar_t * , const wchar_t * ) ; wchar_t * wcscpy ( wchar_t * , const wchar_t * ) ; size_t wcscspn ( const wchar_t * , const wchar_t * ) ; size_t wcsftime ( wchar_t * , size_t , const wchar_t * , const struct tm * ) __asm ( "_" "wcsftime" ) ; size_t wcslen ( const wchar_t * ) ; wchar_t * wcsncat ( wchar_t * , const wchar_t * , size_t ) ; int wcsncmp ( const wchar_t * , const wchar_t * , size_t ) ; wchar_t * wcsncpy ( wchar_t * , const wchar_t * , size_t ) ; wchar_t * wcspbrk ( const wchar_t * , const wchar_t * ) ; wchar_t * wcsrchr ( const wchar_t * , wchar_t ) ; size_t wcsrtombs ( char * , const wchar_t * * , size_t , mbstate_t * ) ; size_t wcsspn ( const wchar_t * , const wchar_t * ) ; wchar_t * wcsstr ( const wchar_t * , const wchar_t * ) ; size_t wcsxfrm ( wchar_t * , const wchar_t * , size_t ) ; int wctob ( wint_t ) ; double wcstod ( const wchar_t * , wchar_t * * ) ; wchar_t * wcstok ( wchar_t * , const wchar_t * , wchar_t * * ) ; long wcstol ( const wchar_t * , wchar_t * * , int ) ; unsigned long wcstoul ( const wchar_t * , wchar_t * * , int ) ; wchar_t * wmemchr ( const wchar_t * , wchar_t , size_t ) ; int wmemcmp ( const wchar_t * , const wchar_t * , size_t ) ; wchar_t * wmemcpy ( wchar_t * , const wchar_t * , size_t ) ; wchar_t * wmemmove ( wchar_t * , const wchar_t * , size_t ) ; wchar_t * wmemset ( wchar_t * , wchar_t , size_t ) ; int wprintf ( const wchar_t * , ... ) ; int wscanf ( const wchar_t * , ... ) ; int wcswidth ( const wchar_t * , size_t ) ; int wcwidth ( wchar_t ) ; int vfwscanf ( FILE * , const wchar_t * , __darwin_va_list ) ; int vswscanf ( const wchar_t * , const wchar_t * , __darwin_va_list ) ; int vwscanf ( const wchar_t * , __darwin_va_list ) ; float wcstof ( const wchar_t * , wchar_t * * ) ; long double wcstold ( const wchar_t * , wchar_t * * ) ; long long wcstoll ( const wchar_t * , wchar_t * * , int ) ; unsigned long long wcstoull ( const wchar_t * , wchar_t * * , int ) ; size_t mbsnrtowcs ( wchar_t * , const char * * , size_t , size_t , mbstate_t * ) ; wchar_t * wcpcpy ( wchar_t * , const wchar_t * ) ; wchar_t * wcpncpy ( wchar_t * , const wchar_t * , size_t ) ; wchar_t * wcsdup ( const wchar_t * ) ; int wcscasecmp ( const wchar_t * , const wchar_t * ) ; int wcsncasecmp ( const wchar_t * , const wchar_t * , size_t n ) ; size_t wcsnlen ( const wchar_t * , size_t ) ; size_t wcsnrtombs ( char * , const wchar_t * * , size_t , size_t , mbstate_t * ) ; FILE * open_wmemstream ( wchar_t * * __bufp , size_t * __sizep ) ; wchar_t * fgetwln ( FILE * , size_t * ) ; size_t wcslcat ( wchar_t * , const wchar_t * , size_t ) ; size_t wcslcpy ( wchar_t * , const wchar_t * , size_t ) ; typedef int __iconv_bool ; struct __tag_iconv_t ; typedef struct __tag_iconv_t * iconv_t ; extern int _libiconv_version ; iconv_t iconv_open ( const char * , const char * ) ; size_t iconv ( iconv_t , char * * , size_t * , char * * , size_t * ) ; int iconv_close ( iconv_t ) ; int __iconv_get_list ( char * * * , size_t * , __iconv_bool ) ; void __iconv_free_list ( char * * , size_t ) ; size_t __iconv ( iconv_t , char * * , size_t * , char * * , size_t * , __uint32_t , size_t * ) ; typedef struct { void * spaceholder [ 64 ] ; } iconv_allocation_t ; int iconv_open_into ( const char * , const char * , iconv_allocation_t * ) ; void libiconv_set_relocation_prefix ( const char * , const char * ) ; typedef void ( * iconv_unicode_char_hook ) ( unsigned int mbr , void * data ) ; typedef void ( * iconv_wide_char_hook ) ( wchar_t wc , void * data ) ; struct iconv_hooks { iconv_unicode_char_hook uc_hook ; iconv_wide_char_hook wc_hook ; void * data ; } ; typedef void ( * iconv_unicode_mb_to_uc_fallback ) ( const char * , size_t , void ( * write_replacement ) ( const unsigned int * , size_t , void * ) , void * , void * ) ; typedef void ( * iconv_unicode_uc_to_mb_fallback ) ( unsigned int , void ( * write_replacement ) ( const char * , size_t , void * ) , void * , void * ) ; typedef void ( * iconv_wchar_mb_to_wc_fallback ) ( const char * , size_t , void ( * write_replacement ) ( const wchar_t * , size_t , void * ) , void * , void * ) ; typedef void ( * iconv_wchar_wc_to_mb_fallback ) ( wchar_t , void ( * write_replacement ) ( const char * , size_t , void * ) , void * , void * ) ; struct iconv_fallbacks { iconv_unicode_mb_to_uc_fallback mb_to_uc_fallback ; iconv_unicode_uc_to_mb_fallback uc_to_mb_fallback ; iconv_wchar_mb_to_wc_fallback mb_to_wc_fallback ; iconv_wchar_wc_to_mb_fallback wc_to_mb_fallback ; void * data ; } ; void iconvlist ( int ( * do_one ) ( unsigned int , const char * const * , void * ) , void * ) ; const char * iconv_canonicalize ( const char * ) ; int iconvctl ( iconv_t , int , void * ) ; int main ( ) { iconv_t cd ; cd = iconv_open ( "IBM1047" , "UTF-8" ) ; if ( cd == ( iconv_t ) - 1 ) return 1 ; return 0 ; } 